- name: Gather latest system facts
  setup:
    filter: ansible_python_interpreter
  register: leapp_setup_test
  ignore_errors: yes

- name: Specify failsafe python interpreter if setup fails
  set_fact:
    ansible_python_interpreter: /usr/bin/python3
  when: leapp_setup_test.failed

- name: Gather latest system facts
  setup:
  when: leapp_setup_test.failed

- name: Gather latest package facts
  package_facts:

- name: Debug output all ansible facts
  debug:
    var: ansible_facts
    verbosity: 2

- name: Include setup tasks specific for distribution and architecture
  include_tasks: '{{ item }}'
  vars:
    params:
      files:
        - 'setup-{{ ansible_distribution }}-{{ ansible_architecture }}.yml'
        - 'setup-{{ ansible_distribution }}.yml'
  loop: "{{ q('first_found', params, errors='ignore') }}"

- name: Perform repository version locking
  block:

    - name: Get yum versionlock list
      command: yum versionlock list --quiet
      args:
        warn: no
      changed_when: no
      register: yum_versionlock_status

    - name: Debug output of yum versionlock list
      debug:
        var: yum_versionlock_status
        verbosity: 2

    - name: Set yum versionlock status
      set_fact:
        leapp_yum_version_locked: '{{ yum_versionlock_status.stdout_lines | default() | length > 0 }}'

  when:
    - leapp_yum_version_locked is not defined
    - '"yum-plugin-versionlock" in ansible_facts.packages'

- name: Cache local system state and data
  block:

    - name: Saving state of ansible_facts
      copy:
        content: "{{ ansible_facts | to_nice_json }}"
        dest: "/var/log/leapp-ansible_facts-{{ leapp_setup_state }}.json"
      changed_when: no

    - name: Saving ansible_facts to local file -- for reference
      fetch:
        src: "/var/log/leapp-ansible_facts-{{ leapp_setup_state }}.json"
        dest: leapp-reports/
      changed_when: no

    - name: Saving state of hostvars
      copy:
        content: "{{ hostvars[inventory_hostname] | to_nice_json }}"
        dest: "/var/log/leapp-hostvars-{{ leapp_setup_state }}.json"
      changed_when: no

    - name: Saving hostvars to local file -- for reference
      fetch:
        src: "/var/log/leapp-hostvars-{{ leapp_setup_state }}.json"
        dest: leapp-reports/
      changed_when: no

  when:
    - "leapp_setup_state is defined"
